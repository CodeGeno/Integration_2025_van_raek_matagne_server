# Generated by Django 5.1.7 on 2025-05-20 17:57

from django.db import migrations
import bcrypt
import string
import secrets
import datetime


def create_default_admin(apps, schema_editor):
    # Récupération des modèles
    Employee = apps.get_model('security', 'Employee')
    ContactDetails = apps.get_model('security', 'ContactDetails')
    Address = apps.get_model('security', 'Address')
    
    # Vérifier si un compte avec cet email existe déjà
    if not Employee.objects.filter(email='admin@efpl.be').exists():
        # Créer les détails de contact
        contact_details = ContactDetails.objects.create(
            firstName='Admin',
            lastName='Système',
            phoneNumber='0000000000',
            birthDate=datetime.date(1980, 1, 1),  # Date de naissance fictive
            gender='Masculin'
        )
        
        # Créer l'adresse
        address = Address.objects.create(
            street='Rue de l\'école',
            number='1',
            city='Bruxelles',
            zipCode='1000',
            country='Belgique',
            state='Bruxelles'
        )
        
        # Créer l'employé avec le rôle ADMINISTRATOR
        Employee.objects.create(
            email='admin@efpl.be',
            password=bcrypt.hashpw('Admin123*'.encode('utf-8'), bcrypt.gensalt()).decode('utf-8'),
            contactDetails=contact_details,
            address=address,
            role='ADMINISTRATOR'  # Utiliser la valeur enum correspondante
        )
       


def reverse_default_admin(apps, schema_editor):
    # Suppression du compte admin par défaut si nécessaire
    Employee = apps.get_model('security', 'Employee')
    Employee.objects.filter(email='admin@efpl.be').delete()


class Migration(migrations.Migration):

    dependencies = [
        ('security', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_default_admin, reverse_default_admin),
    ]
